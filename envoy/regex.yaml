static_resources:
  listeners:
    - address:
        socket_address:
          address: 0.0.0.0
          port_value: 8080
      filter_chains:
        - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config: 
              '@type': 'type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager'
              stat_prefix: http_proxy
              route_config:
                name: all
                virtual_hosts:
                  - name: allbackend_cluster
                    domains:
                      - '*'
                    routes:
                      - match:
                          safe_regex:
                            regex: ^\/([^\/]+.*)$
                        route:
                          regex_rewrite:
                            pattern:
                              google_re2: {}
                              regex: ^\/([^\/]+.*)$
                            substitution: "/static/\\1"
                          cluster: allbackend_cluster
                        response_headers_to_add:        
                          - header:
                              key: X-Envoy-Match
                              value: non-empty-path
                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
                      - match:  
                          prefix: "/"
                        route:
                          prefix_rewrite: "/static/homepage"
                          cluster: allbackend_cluster
                        response_headers_to_add:        
                          - header:
                              key: X-Envoy-Match
                              value: empty-path
                            append_action: OVERWRITE_IF_EXISTS_OR_ADD
              http_filters:
                - name: envoy.filters.http.router
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
              access_log:
                - name: envoy.access_loggers.file
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                    path: /dev/stdout
                    log_format:
                      json_format:
                        start_time: "%START_TIME%"
                        method: "%REQ(:METHOD)%"
                        path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
                        protocol: "%PROTOCOL%"
                        response_code: "%RESPONSE_CODE%"
                        response_code_details: "%RESPONSE_CODE_DETAILS%"
                        connection_termination_details: "%CONNECTION_TERMINATION_DETAILS%"
                        response_flags: "%RESPONSE_FLAGS%"
                        bytes_received: "%BYTES_RECEIVED%"
                        bytes_sent: "%BYTES_SENT%"
                        duration: "%DURATION%"
                        request_duration: "%REQUEST_DURATION%"
                        response_duration: "%RESPONSE_DURATION%"
                        response_tx_duration: "%RESPONSE_TX_DURATION%"
                        upstream_service_time: "%RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%"
                        forwarded_for: "%REQ(X-FORWARDED-FOR)%"
                        user_agent: "%REQ(USER-AGENT)%"
                        request_id: "%REQ(X-REQUEST-ID)%"
                        authority: "%REQ(:AUTHORITY)%"
                        upstream_host: "%UPSTREAM_HOST%"
                        upstream_cluster: "%UPSTREAM_CLUSTER%"
                        upstream_transport_failure_reason: "%UPSTREAM_TRANSPORT_FAILURE_REASON%"
                        requested_server_name: "%REQUESTED_SERVER_NAME%"
                        downstream_remote_address: "%DOWNSTREAM_REMOTE_ADDRESS%"
                        downstream_direct_remote_address: "%DOWNSTREAM_DIRECT_REMOTE_ADDRESS%"
                        envoy_external_address: "%REQ(X-ENVOY-EXTERNAL-ADDRESS)%"
                        true_client_ip: "%REQ(TRUE-CLIENT-IP)%"
                        traceparent: "%REQ(TRACEPARENT)%"
  
  clusters:
    - name: allbackend_cluster
      connect_timeout: 1s
      type: strict_dns
      lb_policy: round_robin
      load_assignment: 
        cluster_name: allbackend_cluster
        endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: 127.0.0.1
                    port_value: 1111
            
            - endpoint:
                address:
                  socket_address:
                    address: 127.0.0.1
                    port_value: 2222
            
            - endpoint:
                address:
                  socket_address:
                    address: 127.0.0.1
                    port_value: 3333
            
            - endpoint:
                address:
                  socket_address:
                    address: 127.0.0.1
                    port_value: 4444

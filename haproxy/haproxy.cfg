global
  # enables the HAProxy Runtime API and also enables seamless reloads of HAProxy.
  stats socket /var/run/api.sock user haproxy group haproxy mode 660 level admin expose-fd listeners
  log stdout format raw local0 info

defaults
  mode http
  option httplog
  option http-server-close
  timeout client 10s
  timeout connect 5s
  timeout server 10s
  timeout http-request 10s
  log global

frontend stats
  bind *:8404
  stats enable
  stats uri /
  stats refresh 10s

frontend myfrontend
  bind :80
  acl has_dsa_ip hdr(x-dsa-originalip) -m found
  http-request set-header X-DSA-OriginalIP %[src] if !has_dsa_ip
  http-response set-header X-DSA-host %[srv_name]
  

  ### Content tests
  acl host_content req.hdr(Host) -m beg content.

  #content v1 test
  acl promobanner_path path_beg -i /promobanner

  #content root paths test
  acl swagger_path path_beg -i /testing-swagger
  acl has_origin_header capture.req.hdr(0) -m found


  # http-response add-header Access-Control-Allow-Methods GET, HEAD, OPTIONS, POST, PUT, PATCH, DELETE if has_origin_header
  http-response add-header Access-Control-Allow-Methods: GET,HEAD,OPTIONS,POST,PUT,PATCH,DELETE if has_origin_header
  http-response add-header Access-Control-Allow-Headers x-requested-with,content-type,accept,origin,authorization,x-csrftoken




  ## backend for contents
  use_backend content-be-v1-paths if host_content promobanner_path
  use_backend content-be-v1-swp-content if host_content 
  use_backend content-be-root if host_content swagger_path


  ### Merch tests
  # acl host_merch hdr(host) -i merch.
  acl host_merch req.hdr(Host) -m beg merch.

  acl merch_placement_v1_path path_beg -i /placement/v1/placements

  ## ACls for detect v2 paths
  acl merch_placement_v2_path path_beg -i /placement/v2/placements

  ## ACls for detect packages/content
  acl merch_packages_content_path path_beg -i /packages/content

  use_backend merch-placement-v1 if host_merch merch_placement_v1_path
  
  ## Merch - V1
  use_backend merch-placement-v2 if host_merch merch_placement_v2_path

  ## Merch - packages content
  use_backend merch-content-v1 if host_merch merch_packages_content_path

  ## Merch - refault (/ with Merch host)
  use_backend merch-default if host_merch 

  default_backend webservers

#---------------------------------------------------------------------
# Backend - Content API Origin - v1 paths
#---------------------------------------------------------------------
backend content-be-v1-paths

  http-response add-header X-Backend swp-aws-v1

  # Define healthcheck route for backend status
  # option httpchk GET /healthcheck.html

  ### ADD SWP v1 PATH PREFIX  (https://content.dev-godaddy.com/{path}/  ==> https://localhost/v1/{path} )
  # reqrep ^([^\ :]*)\ (.*) \1\ /v1\2
  # http-request replace-path ^/([^/]+)(.*) /v1/\1\2
  http-request set-path %[path,regsub(^/*,/v1/)]

  ### SET SWP HOST HEADER
  http-request set-header Host localhost

  ### AWS Origin
  server origin-swp-aws host.docker.internal:4444

  ### CLEAN THE RESPONSE
  http-response del-header Server
  http-response del-header X-Powered-By
  http-response del-header X-AspNet-Version
  http-response del-header X-AspNetMvc-Version

#---------------------------------------------------------------------
#  Backend - Content API Origin - SWP content
#---------------------------------------------------------------------
backend content-be-v1-swp-content

  http-response add-header X-Backend swp-aws-content

  # Define healthcheck route for backend status
  option httpchk GET /healthcheck.html

  ### ADD SWP v1/content PATH PREFIX (https://content.dev-godaddy.com/{path}/  ==> https://localhost/v1/content/{path} ))
  # reqrep ^([^\ :]*)\ (.*) \1\ /v1/content\2
  # http-request replace-path ^.*/swagger/content/?(.*) /\1
  # http-request replace-path ^/([^/]+)(.*) /v1/content/\1\2
  http-request set-path %[path,regsub(^/*,/v1/content/)]
  

  ### SET SWP HOST HEADER
  http-request set-header Host localhost

  ### SWP Dev AWS Origin
  server origin-swp-aws  host.docker.internal:4444

  ### CLEAN THE RESPONSE
  http-response del-header Server
  http-response del-header X-Powered-By
  http-response del-header X-AspNet-Version
  http-response del-header X-AspNetMvc-Version

#---------------------------------------------------------------------
#  Backend - Content API Origin - root
#---------------------------------------------------------------------
backend content-be-root

  http-response add-header X-Backend swp-aws-root

  # Define healthcheck route for backend status
  option httpchk GET /healthcheck.html

  ### SET SWP HOST HEADER
  http-request set-header Host localhost

  ### SWP Dev AWS Origin
  server origin-swp-aws  host.docker.internal:4444    

  ### CLEAN THE RESPONSE
  http-response del-header Server
  http-response del-header X-Powered-By
  http-response del-header X-AspNet-Version
  http-response del-header X-AspNetMvc-Version

#---------------------------------------------------------------------
# Backend - Merch API Origin - v1 placements
#---------------------------------------------------------------------
backend merch-placement-v1
  http-response add-header X-Backend merch-placement-v1

  # Define healthcheck route for backend status
  option httpchk GET /healthcheck.html

  ### Update to the expected SWP v1/placement PATH (https://merch.dev-godaddy.com/placement/v1/placements/{path}  ==> https://localhost/v1/placements/{path} )
  http-request set-path %[path,regsub(^/placement/v1/placements,/v1/placements)]

  ### SET SWP HOST HEADER
  http-request set-header Host localhost

  ### SWP Dev AWS Origin
  server origin-swp-aws  host.docker.internal:4444

  ### CLEAN THE RESPONSE
  http-response del-header Server
  http-response del-header X-Powered-By
  http-response del-header X-AspNet-Version
  http-response del-header X-AspNetMvc-Version

#---------------------------------------------------------------------
# Backend - Merch API Origin - v2 placements
#---------------------------------------------------------------------
backend merch-placement-v2
  http-response add-header X-Backend merch-placement-v2

  # Define healthcheck route for backend status
  option httpchk GET /healthcheck.html

  ### Update to the expected SWP v1/placement PATH (https://merch.dev-godaddy.com/placement/v2/placements/{path}  ==> https://localhost/v1/content/ComponentSettings/Package%20Placement/{path} )
  http-request set-path %[path,regsub(^/placement/v2/placements,/v1/content/ComponentSettings/Package%20Placement)]

  ### SET SWP HOST HEADER
  http-request set-header Host localhost

  ### SWP Dev AWS Origin
  server origin-swp-aws  host.docker.internal:4444

  ### CLEAN THE RESPONSE
  http-response del-header Server
  http-response del-header X-Powered-By
  http-response del-header X-AspNet-Version
  http-response del-header X-AspNetMvc-Version


#---------------------------------------------------------------------
# Backend - Merch API Origin - package content
#---------------------------------------------------------------------
backend merch-content-v1
# todo: remove this efd commented rule
# - match:
#     prefix: /packages/content
#   route:
#     host_rewrite_literal: "localhost"
#     cluster: merchandise
#     regex_rewrite:
#       pattern:
#         regex: "^([^ :]*)\\/packages\\/content(.*)$"
#       substitution: "\\1/v1/catalog/packages\\2"

  http-response add-header X-Backend merch-content-v1

  # Define healthcheck route for backend status
  option httpchk GET /healthcheck.html
  
  ### Update to the expected SWP v1/placement PATH (https://merch.dev-godaddy.com/packages/content/{path}  ==> https://localhost/v1/catalog/packages/{path} )
  http-request set-path %[path,regsub(^/packages/content,/v1/catalog/packages)]

  ### SET SWP HOST HEADER
  http-request set-header Host localhost

  ### SWP Dev AWS Origin
  server origin-swp-aws  host.docker.internal:4444

  ### CLEAN THE RESPONSE
  http-response del-header Server
  http-response del-header X-Powered-By
  http-response del-header X-AspNet-Version
  http-response del-header X-AspNetMvc-Version

#---------------------------------------------------------------------
# Backend - Merch API Origin - default
#---------------------------------------------------------------------
backend merch-default
# todo: remove this efd commented rule
# - match:
#     prefix: /
#   route:
#     host_rewrite_literal: "localhost"
#     cluster: merchandise

  http-response add-header X-Backend merch-default-katana-haproxy

  # Define healthcheck route for backend status
  option httpchk GET /healthcheck.html

  ### SET SWP HOST HEADER
  http-request set-header Host localhost

  ### SWP Dev AWS Origin
  server origin-swp-aws  host.docker.internal:4444

  ### CLEAN THE RESPONSE
  http-response del-header Server
  http-response del-header X-Powered-By
  http-response del-header X-AspNet-Version
  http-response del-header X-AspNetMvc-Version


backend webservers
  server s1 host.docker.internal:1111 check
  server s2 host.docker.internal:2222 check
  server s3 host.docker.internal:3333 check
  server s4 host.docker.internal:4444 check
